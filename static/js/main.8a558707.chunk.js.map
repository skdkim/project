{"version":3,"sources":["logo.svg","assets/images/david.gif","NPSApi.js","Home.js","Board/Note.js","Board/Board.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","npsKey","NPSApi","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoaded","parkChosen","images","queries","park","inputSubmit","bind","assertThisInitialized","choosePark","pCode","_this2","fetch","then","res","json","jsonImages","data","setState","event","_this3","url","target","value","body","_this4","_this$state","react_default","a","createElement","map","query","key","id","onClick","parkCode","fullName","image","src","width","height","className","logo","alt","type","onChange","placeholder","Component","Home","david","href","class","Link","to","Note","editing","content","edit","remove","save","renderForm","renderDisplay","randomBetween","style","right","window","innerWidth","top","innerHeight","transform","textArea","newMsg","focus","select","nextProps","nextState","children","x","y","s","Math","ceil","random","onRemove","index","e","preventDefault","onSubmit","ref","defaultValue","fa","Board","notes","eachNote","update","add","nextId","clear","self","count","response","split","forEach","sentence","substring","newText","i","prevState","note","objectSpread","filter","uniqueId","text","toConsumableArray","concat","msg","Board_Note","App","burgerDisp","menuDisp","topBarStyle","midBarStyle","botBarStyle","overMenuButton","toggleMenu","opacity","transition","BrowserRouter","menuStyle","onMouseEnter","menuMouseEnter","onMouseLeave","menuMouseLeave","display","Route","path","component","render","src_Board_Board","assign","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8a558707.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/david.faca55ad.gif\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route} from 'react-router-dom';\nconst npsKey = './assets/keys/npsAPIKey.npsKey';\n\n\nclass NPSApi extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isLoaded : false,\n      parkChosen : false,\n      images : [],\n      queries: [],\n      park: \"\"\n    }\n\n    this.inputSubmit = this.inputSubmit.bind(this);\n    this.choosePark = this.choosePark.bind(this);\n  }\n\n  choosePark(pCode){\n    return function(){\n        let url = 'https://api.nps.gov/api/v1/parks?fields=images&parkCode=' + pCode + '&api_key=' + npsKey;\n        fetch(url)\n          .then(res => res.json())\n          .then(json => {\n            let jsonImages = json.data[0].images;\n            this.setState({\n              isLoaded: true,\n              images: jsonImages,\n            })\n          })\n    }.bind(this)\n  }\n\n  inputSubmit(event){\n    let url = 'https://api.nps.gov/api/v1/parks?limit=4&q='+ event.target.value + '&api_key=' + npsKey;\n    fetch(url)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          queries: json.data,\n        })\n      })\n  }\n\n  render() {\n    let {isLoaded, images, queries, park} = this.state;\n    let body;\n\n    if(!isLoaded){\n      body = (\n        <div>\n          <br/>\n          Search a national park name to see photos.\n        </div>\n      );\n    } else {\n      body = (\n        <div>\n          <ul >\n            {queries.map( query =>\n              <button key = {query.id} onClick={this.choosePark(query.parkCode)}>\n                {query.fullName}\n              </button>\n            )}\n          </ul>\n          <ul>\n            {images.map( image => (\n                <img key={image.id} src={image.url} width=\"500px\" height = \"300px\"/>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">National Parks Service API DEMO</h1>\n        </header>\n        <input type=\"text\" onChange={this.inputSubmit} placeholder=\"National Park\"></input>\n        {body}\n      </div>\n    );\n  }\n}\n\nexport default NPSApi;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport david from './assets/images/david.gif';\nimport './Home.css';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route} from 'react-router-dom';\n\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\" id=\"home\">\n        <img id=\"davidGif\" src={david} alt=\"logo\" />\n        <h1 className=\"App-title\">David's Future Portfolio</h1>\n        <p className=\"App-intro\">\n          Welcome to my future portfolio project. <br/>\n          I'm hand rolling this as a fun react project. <br/>\n          This probably won't look good on mobile for a while. <br/>\n        <br/>\n        <a href=\"http://davidkim.tech\">Official Portfolio for now</a><br/>\n          <br/>\n          Click on a link below or in the side menu.\n        </p>\n        <h3>Projects</h3>\n        <div class=\"projects-container\">\n          <div class=\"project\">\n            <Link class=\"link\" to={'/project/npsapi'}>NPS API DEMO</Link>\n          </div>\n          <div class=\"project\">\n            <Link class=\"link\" to={'/project/board'}>Bulletin Board</Link>\n          </div>\n          <div class=\"project\">\n            <a href=\"http://www.hikergram.com\" target=\"_blank\">HikerGram</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { FaBeer } from 'react-icons/fa';\n\nimport { FaPencilAlt } from 'react-icons/fa';\nimport { FaTrash } from 'react-icons/fa';\nimport { FaSave } from 'react-icons/fa';\n\n\nclass Note extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      editing: false,\n      content: \"Hello World\"\n    }\n\n    this.edit = this.edit.bind(this);\n    this.remove = this.remove.bind(this);\n    this.save = this.save.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.renderDisplay = this.renderDisplay.bind(this);\n    this.randomBetween = this.randomBetween.bind(this);\n  }\n\n  componentWillMount(){\n    this.style = {\n      right: this.randomBetween(0, window.innerWidth - 150, \"px\"),\n      top: this.randomBetween(0, window.innerHeight - 150, \"px\"),\n      transform: \"rotate(\" + this.randomBetween(-25,25,\"deg\") + \")\"\n    }\n  }\n\n  componentDidUpdate(){\n      let textArea;\n      if(this.state.editing){\n        textArea = this.newMsg;\n        textArea.focus();\n        textArea.select();\n      }\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    return(\n      this.props.children !== nextProps.children || this.state !== nextState\n    )\n  }\n\n  randomBetween(x,y,s){\n    return x + Math.ceil(Math.random() * (y - x)) + s;\n  }\n\n  edit(){\n    this.setState({editing: true, content: this.newMsg});\n  }\n\n  remove(){\n    this.props.onRemove(this.props.index)\n  }\n\n  save(e){\n    e.preventDefault();\n    this.props.onChange(this.newMsg.value, this.props.index)\n    this.setState({editing: false, content: this.newMsg.value});\n  }\n\n  renderForm(){\n    return (\n      <div className=\"note\" style={this.style}>\n        <form onSubmit={this.save}>\n          <textarea type=\"text\" ref={content => this.newMsg = content} defaultValue={this.props.children}/>\n          <button id=\"save\"><FaSave/></button>\n        </form>\n      </div>\n    );\n  }\n\n  renderDisplay(){\n    return (\n      <div className=\"note\" style={this.style}>\n        <p>{this.props.children}</p>\n        <span>\n          <button id=\"edit\" onClick={this.edit}><FaPencilAlt /> </button>\n          <button id=\"remove\" onClick={this.remove}><FaTrash /></button>\n        </span>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.editing ? this.renderForm() : this.renderDisplay();\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport './board.css';\nimport Note from './Note';\nimport { FaPlus } from 'react-icons/fa';\n\n\nclass Board extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      notes: [\n      ]\n    }\n    this.eachNote = this.eachNote.bind(this);\n    this.update = this.update.bind(this);\n    this.remove = this.remove.bind(this);\n    this.add = this.add.bind(this);\n    this.nextId = this.nextId.bind(this);\n    this.clear = this.clear.bind(this);\n  }\n\n  componentWillMount(){\n    let self = this;\n    if(this.props.count){\n      fetch('https://baconipsum.com/api/?type=all-meat&sentences=' + this.props.count)\n        .then(response => response.json())\n        .then(json => json[0].split(\". \").forEach(sentence => self.add(sentence.substring(0, 25))))\n    }\n  }\n\n  update(newText, i){\n    this.setState(prevState => ({\n      notes: prevState.notes.map(\n        note => (note.id !== i ? note : {...note, note: newText})\n      )\n    }))\n  }\n\n  remove(id){\n    this.setState(prevState => ({\n      notes: prevState.notes.filter(note => note.id !== id)\n    }))\n  }\n\n  nextId(){\n    this.uniqueId = this.uniqueId || 0;\n    return ++this.uniqueId;\n  }\n\n  add(text){\n    let id = this.nextId()\n    this.setState(prevState => ({\n      notes: [\n        ...prevState.notes,\n        {\n          id: id,\n          note: text\n        }\n      ]\n    }))\n  }\n\n  eachNote(msg, i){\n    return(\n      <Note key={msg.id}\n            index ={msg.id}\n            onChange={this.update}\n            onRemove={this.remove}>\n            {msg.note}\n      </Note>\n    )\n  }\n\n  clear(){\n    this.setState({notes: []})\n  }\n\n  render() {\n    return (\n      <div className=\"board\">\n          {this.state.notes.map(this.eachNote)}\n          <button id=\"add\" onClick={this.add.bind(null, \"new note\")}><FaPlus /></button>\n          <button id=\"add\" onClick={this.clear}>Clear</button>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport NPSApi from './NPSApi';\nimport Home from './Home';\nimport Board from '../src/Board/Board';\nimport { FaPencil } from 'react-icons/fa';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {burgerDisp: \"none\",\n                  menuDisp: \"none\",\n                  topBarStyle: {},\n                  midBarStyle: {},\n                  botBarStyle: {},\n                  overMenuButton: false\n                };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu(){\n    if(this.state.menuDisp === \"none\"){\n      this.setState({menuDisp: \"flex\",\n                    topBarStyle: {transform: \"rotate(-225deg)\", top: \".5em\"},\n                    midBarStyle: {opacity: \"0\", transition: \"200ms\"},\n                    botBarStyle: {transform: \"rotate(225deg)\", top: \".5em\"}});\n    } else {\n      this.setState({menuDisp:\"none\",\n                    topBarStyle: {},\n                    midBarStyle: {},\n                    botBarStyle: {}});\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <div class=\"menu\" style={this.state.menuStyle} onClick={this.toggleMenu}\n                                                         onMouseEnter={this.menuMouseEnter}\n                                                         onMouseLeave={this.menuMouseLeave}>\n            <div id=\"topBar\" style={this.state.topBarStyle}></div>\n            <div id=\"middleBar\" style={this.state.midBarStyle}></div>\n            <div id=\"bottomBar\" style={this.state.botBarStyle}></div>\n          </div>\n\n          <div class=\"sidebar\" style={{display: this.state.menuDisp}}>\n            <div class=\"placeholder\"></div>\n            <Link class=\"link\" onClick={this.toggleMenu} to={'/project'}>Home</Link>\n            <br/>\n            <Link class=\"link\" onClick={this.toggleMenu} to={'/project/npsapi'}>NPS API</Link>\n            <br/>\n            <Link class=\"link\" onClick={this.toggleMenu} to={'/project/board'}>Board</Link>\n          </div>\n\n          <Route path=\"/project/npsapi\" component={NPSApi}/>\n          <Route path=\"/project/board\" render={(props) => <Board {...props} count={50}/>}/>\n          <Route path=\"/project/home\" component={Home}/>\n          <Route exact path=\"/project\" component={Home}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}